package ripio.lootballs.datagen;

import com.cobblemon.mod.common.CobblemonItems;
import com.cobblemon.mod.common.util.adapters.NbtCompoundAdapter;
import com.mojang.brigadier.exceptions.CommandSyntaxException;
import com.mojang.datafixers.kinds.Const;

import blue.endless.jankson.annotation.Nullable;
import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.SimpleFabricLootTableProvider;
import net.fabricmc.fabric.impl.item.ItemExtensions;
import net.minecraft.item.Item;
import net.minecraft.item.ItemConvertible;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.registry.*;
import net.minecraft.nbt.*;
import net.minecraft.loot.LootPool;
import net.minecraft.loot.LootTable;
import net.minecraft.loot.context.LootContextTypes;
import net.minecraft.loot.entry.ItemEntry;
import net.minecraft.loot.entry.LootPoolEntry;
import net.minecraft.loot.entry.LootPoolEntryType;
import net.minecraft.loot.entry.LootPoolEntryTypes;
import net.minecraft.loot.function.LootFunction;
import net.minecraft.loot.function.SetCountLootFunction;
import net.minecraft.loot.function.SetNbtLootFunction;
import net.minecraft.loot.provider.number.ConstantLootNumberProvider;
import net.minecraft.loot.provider.number.UniformLootNumberProvider;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.nbt.StringNbtReader;
import net.minecraft.util.Identifier;
import ripio.lootballs.LootBalls;
import dev.architectury.registry.registries.DeferredRegister;
import dev.architectury.registry.registries.DeferredSupplier;
import dev.architectury.registry.registries.RegistrySupplier;
import dev.ftb.mods.ftbquests.FTBQuests;
import dev.ftb.mods.ftbquests.api.FTBQuestsAPI;
import dev.ftb.mods.ftbquests.fabric.FTBQuestsFabric;
import dev.ftb.mods.ftbquests.item.*;
import dev.ftb.mods.ftbquests.quest.loot.LootCrate;
import dev.ftb.mods.ftbquests.util.NBTUtils;
import io.wispforest.owo.registration.reflect.ItemRegistryContainer;

import java.util.List;
import java.util.function.Supplier;

import org.apache.http.config.Registry;

import java.util.function.BiConsumer;

public class LootBallsLootTableProvider extends SimpleFabricLootTableProvider {
    public static final Identifier AZURE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "azure_loot_table");
    public static final Identifier CITRINE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "citrine_loot_table");
    public static final Identifier DIVE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "dive_loot_table");
    public static final Identifier GREAT_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "great_loot_table");
    public static final Identifier HEAL_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "heal_loot_table");
    public static final Identifier LURE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "lure_loot_table");
    public static final Identifier LUXURY_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "luxury_loot_table");
    public static final Identifier MASTER_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "master_loot_table");
    public static final Identifier POKE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "poke_loot_table");
    public static final Identifier PREMIER_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "premier_loot_table");
    public static final Identifier REPEAT_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "repeat_loot_table");
    public static final Identifier ROSEATE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "roseate_loot_table");
    public static final Identifier SAFARI_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "safari_loot_table");
    public static final Identifier SLATE_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "slate_loot_table");
    public static final Identifier ULTRA_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "ultra_loot_table");
    public static final Identifier VERDANT_LOOT_TABLE = new Identifier(LootBalls.MOD_ID, "verdant_loot_table");




    public static final ItemStack LOOT_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: commonitemlist2}");
    public static final ItemStack AZURE_LEGENDARIES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: azurelegendaries}");
    public static final ItemStack CITRINE_LEGENDARIES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: citrinelegendaries}");
    public static final ItemStack VERDANT_LEGENDARIES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: verdantgendaries}");
    public static final ItemStack ROSEATE_LEGENDARIES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: roseatelegendaries}");
    public static final ItemStack SLATE_LEGENDARIES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: slatelegendaries}");
    public static final ItemStack ENDERBAGS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: enderbags}");
    public static final ItemStack FEATHER_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: feather}");
    public static final ItemStack FOSSIL_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: fossilcrate}");
    public static final ItemStack RICHES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: riches}");
    public static final ItemStack GEMS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: gems}");
    public static final ItemStack PIRATE_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: pirate_s_booty}");
    public static final ItemStack ULTRA_RARE_DROPS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: ultrararedrops}");
    public static final ItemStack MOB_DROPS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: overworldloot}");
    public static final ItemStack NETHER_DROPS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: netherloot}");
    public static final ItemStack END_DROPS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: endloot}");
    public static final ItemStack COMMONITEMS1_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: commonitemlist}");
    public static final ItemStack COMMONITEMS2_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: commonitemlist2}");
    public static final ItemStack COMMONITEMS3_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: commonitemlist3}");
    public static final ItemStack CHARMS_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: charms}");
    public static final ItemStack BOTTLECAP_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: bottlecaps}");
    public static final ItemStack WARP_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: warp}");
    public static final ItemStack GAMBLING_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: gambling}");
    public static final ItemStack STARTER_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: starter}");
    public static final ItemStack MEGA_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: megastones}");
    public static final ItemStack ORE_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: ore}");
    public static final ItemStack APRICORN_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: apricorns}");
    public static final ItemStack COMMON_BERRY_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: commonberries}");
    public static final ItemStack RARE_BERRY_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: rareberries}");
    public static final ItemStack EPIC_BERRY_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: epicberries}");
    public static final ItemStack LEGENDARY_BERRY_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: legendaryberries}");
    public static final ItemStack EVO_STONES_CRATE = CreateNBTItemStack(FTBQuestsItems.LOOTCRATE.get(), 1, "{type: evostones}");
    public int number = 0;

    public LootBallsLootTableProvider(FabricDataOutput dataGenerator) {
        super(dataGenerator, LootContextTypes.CHEST);
    }
public static NbtCompound NBT = new NbtCompound();
public static <Int> ItemStack CreateNBTItemStack(Item item, int count, String nbt) {
ItemStack Stack = item.getDefaultStack();
Stack.setCount(count);

NbtCompound NBT = new NbtCompound();
try {
NBT = StringNbtReader.parse(nbt);
} catch (CommandSyntaxException e) {
throw new RuntimeException(e);
}
Stack.setNbt(NBT);

return Stack;
}
    @SuppressWarnings("deprecation")
@Override
    public void accept(BiConsumer<Identifier, LootTable.Builder> biConsumer) {
        biConsumer.accept(AZURE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.POTION)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POKE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.AZURE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MOON_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.DUSK_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.QUICK_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.FAST_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(FEATHER_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(FEATHER_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.AIR_BALLOON)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.QUICK_CLAW)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RAZOR_CLAW)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.COVERT_CLOAK)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EJECT_BUTTON)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SHARP_BEAK)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAX_REVIVE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(ENDERBAGS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ENDERBAGS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(AZURE_LEGENDARIES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(AZURE_LEGENDARIES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(7)
                        )
                )
        );
        biConsumer.accept(CITRINE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.POTION)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POKE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.CITRINE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ULTRA_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.LEVEL_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.NEST_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.REPEAT_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(EVO_STONES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(EVO_STONES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(FOSSIL_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(FOSSIL_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAGNET)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SOFT_SAND)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.IRON_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.QUICK_POWDER)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.METAL_COAT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.METAL_POWDER)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAX_REVIVE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(ENDERBAGS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ENDERBAGS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CITRINE_LEGENDARIES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(CITRINE_LEGENDARIES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(7)
                        )
                )
        );
        biConsumer.accept(DIVE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.DIVE_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(CobblemonItems.WATER_STONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MYSTIC_WATER)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(Items.COAST_ARMOR_TRIM_SMITHING_TEMPLATE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(Items.TIDE_ARMOR_TRIM_SMITHING_TEMPLATE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.X_SP_ATK)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(2F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POWER_LENS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                )
        );
        biConsumer.accept(GREAT_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(5)
        )
        .with(ItemEntry.builder(CobblemonItems.GREAT_BALL)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(5)
        )
        .with(ItemEntry.builder(Items.IRON_NUGGET)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,14F)))
                .weight(5)
        )
        .with(ItemEntry.builder(STARTER_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(STARTER_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(5)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(4)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(4)
        )
        .with(ItemEntry.builder(GAMBLING_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(GAMBLING_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(Items.EMERALD)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(4)
        )
        .with(ItemEntry.builder(Items.IRON_INGOT)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(4)
        )
        .with(ItemEntry.builder(Items.GOLD_INGOT)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(4)
        )
        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(3)
        )
        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                .weight(3)
        )
        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(WARP_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(WARP_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(BOTTLECAP_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(BOTTLECAP_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(END_DROPS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(END_DROPS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(2)
        )
        .with(ItemEntry.builder(NETHER_DROPS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(NETHER_DROPS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(COMMONITEMS3_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(COMMONITEMS3_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(COMMONITEMS2_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(COMMONITEMS2_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(COMMONITEMS1_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(COMMONITEMS1_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(CHARMS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(CHARMS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
        .weight(1)
)
        .with(ItemEntry.builder(CobblemonItems.ABILITY_PATCH)
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(1)
        )
        .with(ItemEntry.builder(ULTRA_RARE_DROPS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(ULTRA_RARE_DROPS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
        .weight(1)
)
        .with(ItemEntry.builder(PIRATE_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(PIRATE_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(1)
        )
                )
        );
        biConsumer.accept(HEAL_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.HEAL_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(CobblemonItems.PARALYZE_HEAL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(3F,6F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.AWAKENING)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(3F,6F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ANTIDOTE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(3F,6F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ICE_HEAL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(3F,6F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.BURN_HEAL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(3F,6F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.FULL_HEAL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAX_REVIVE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.FULL_RESTORE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(LURE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.LURE_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ICE_STONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(CobblemonItems.NEVER_MELT_ICE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(CobblemonItems.DEEP_SEA_SCALE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.DEEP_SEA_TOOTH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POWER_ANKLET)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.DRAGON_SCALE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(LUXURY_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.LUXURY_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SHINY_STONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(Items.AMETHYST_SHARD)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(32F,48F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(Items.COPPER_INGOT)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(32F,48F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(Items.LAPIS_LAZULI)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(32F,48F)))
                                .weight(5)
                        )
                        .with(ItemEntry.builder(Items.IRON_INGOT)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(16F,32F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(Items.GOLD_INGOT)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(16F,32F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.DIAMOND)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(8F,16F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_SCRAP)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(2F,4F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(MASTER_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(Items.ENCHANTED_GOLDEN_APPLE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(8F,16F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_SCRAP)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(4F,8F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(Items.NETHER_STAR)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(10F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(8F)))
                                .weight(5)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(6F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(5F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MASTER_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(POKE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POKE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(Items.IRON_NUGGET)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,14F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(STARTER_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(STARTER_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(GAMBLING_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GAMBLING_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.EMERALD)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(Items.IRON_INGOT)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(Items.GOLD_INGOT)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(WARP_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(WARP_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(BOTTLECAP_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(BOTTLECAP_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(END_DROPS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(END_DROPS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(NETHER_DROPS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(NETHER_DROPS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(COMMONITEMS3_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(COMMONITEMS3_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(COMMONITEMS2_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(COMMONITEMS2_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(COMMONITEMS1_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(COMMONITEMS1_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CHARMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(CHARMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                        .weight(1)
                )
                        .with(ItemEntry.builder(CobblemonItems.ABILITY_PATCH)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                        .with(ItemEntry.builder(ULTRA_RARE_DROPS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ULTRA_RARE_DROPS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                        .weight(1)
                )
                        .with(ItemEntry.builder(PIRATE_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(PIRATE_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(PREMIER_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(7)
        )
        .with(ItemEntry.builder(CobblemonItems.PREMIER_BALL)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(7)
        )
        .with(ItemEntry.builder(Items.IRON_NUGGET)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,14F)))
                .weight(7)
        )
        .with(ItemEntry.builder(STARTER_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(STARTER_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(7)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(4)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(4)
        )
        .with(ItemEntry.builder(GAMBLING_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(GAMBLING_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(Items.EMERALD)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(4)
        )
        .with(ItemEntry.builder(Items.IRON_INGOT)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(4)
        )
        .with(ItemEntry.builder(Items.GOLD_INGOT)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                .weight(4)
        )
        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(3)
        )
        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                .weight(3)
        )
        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(WARP_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(WARP_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(3)
        )
        .with(ItemEntry.builder(BOTTLECAP_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(BOTTLECAP_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(END_DROPS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(END_DROPS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                .weight(2)
        )
        .with(ItemEntry.builder(NETHER_DROPS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(NETHER_DROPS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(COMMONITEMS3_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(COMMONITEMS3_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(COMMONITEMS2_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(COMMONITEMS2_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(COMMONITEMS1_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(COMMONITEMS1_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(2)
        )
        .with(ItemEntry.builder(CHARMS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(CHARMS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
        .weight(1)
)
        .with(ItemEntry.builder(CobblemonItems.ABILITY_PATCH)
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(1)
        )
        .with(ItemEntry.builder(ULTRA_RARE_DROPS_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(ULTRA_RARE_DROPS_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
        .weight(1)
)
        .with(ItemEntry.builder(PIRATE_CRATE.getItem())
                .apply(SetNbtLootFunction.builder(PIRATE_CRATE.getNbt()))
                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                .weight(1)
        )
                )
        );
        biConsumer.accept(REPEAT_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.REPEAT_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SOFT_SAND)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(CobblemonItems.LIGHT_CLAY)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(9)
                        )
                        .with(ItemEntry.builder(Items.DUNE_ARMOR_TRIM_SMITHING_TEMPLATE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(Items.DIAMOND)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(4F,16F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POWER_BAND)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.DRAGON_FANG)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(Items.WITHER_SKELETON_SKULL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(ROSEATE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.POTION)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POKE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ROSEATE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXP_SHARE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.HEAL_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.LOVE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.DREAM_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ABILITY_CAPSULE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.WISE_GLASSES)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.TWISTED_SPOON)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.FAIRY_FEATHER)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POISON_BARB)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EVIOLITE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SMOKE_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAX_REVIVE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(ENDERBAGS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ENDERBAGS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(ROSEATE_LEGENDARIES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ROSEATE_LEGENDARIES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(7)
                        )
                )
        );
        biConsumer.accept(SAFARI_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.SAFARI_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SUN_STONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SILK_SCARF)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RAZZ_BERRY)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(6F,16F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.NANAB_BERRY)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(6F,16F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.PINAP_BERRY)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(6F,16F)))
                                .weight(6)
                        )
                        .with(ItemEntry.builder(CobblemonItems.LUCKY_EGG)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(1)
                        )
                )
        );
        biConsumer.accept(SLATE_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.POTION)
                        .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                        .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POKE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SLATE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(ORE_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ORE_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SKY_TUMBLESTONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.TUMBLESTONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.BLACK_TUMBLESTONE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(MEGA_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(MEGA_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.HARD_STONE)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.KINGS_ROCK)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SAFETY_GOGGLES)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.HEAVY_DUTY_BOOTS)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ROCKY_HELMET)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.BLACK_GLASSES)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.CHARCOAL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(ENDERBAGS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ENDERBAGS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(SLATE_LEGENDARIES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(SLATE_LEGENDARIES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(7)
                        )
                )
        );
        biConsumer.accept(ULTRA_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.ULTRA_BALL)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(8)
                        )
                        .with(ItemEntry.builder(CobblemonItems.HYPER_POTION)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(3F,6F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAX_ELIXIR)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(2F,4F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MAX_POTION)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(7)
                        )
                        .with(ItemEntry.builder(CobblemonItems.FULL_RESTORE)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(5)
                        )
                        .with(ItemEntry.builder(CobblemonItems.CHOICE_BAND)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.CHOICE_SCARF)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.CHOICE_SPECS)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(3F)))
                                .weight(2)
                        )
                )
        );
        biConsumer.accept(VERDANT_LOOT_TABLE, LootTable.builder()
                .pool(LootPool.builder().rolls(ConstantLootNumberProvider.create(1.0F))
                        .with(ItemEntry.builder(CobblemonItems.POTION)
                        .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                        .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XS)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.POKE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.VERDANT_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,2F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(APRICORN_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(APRICORN_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(10)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_S)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_M)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(COMMON_BERRY_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(COMMON_BERRY_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.PARK_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.FRIEND_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.LURE_BALL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(4)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RARE_CANDY)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_L)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.RELIC_COIN_POUCH)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,4F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(Items.NETHERITE_INGOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RARE_BERRY_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RARE_BERRY_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(GEMS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(GEMS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(RICHES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(RICHES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(3)
                        )
                        .with(ItemEntry.builder(CobblemonItems.LEFTOVERS)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.ABSORB_BULB)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.MIRACLE_SEED)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.BRIGHT_POWDER)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.BIG_ROOT)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.SILVER_POWDER)
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(CobblemonItems.EXPERIENCE_CANDY_XL)
                                .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1F,3F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(EPIC_BERRY_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(EPIC_BERRY_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(ENDERBAGS_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(ENDERBAGS_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(2)
                        )
                        .with(ItemEntry.builder(VERDANT_LEGENDARIES_CRATE.getItem())
                                .apply(SetNbtLootFunction.builder(VERDANT_LEGENDARIES_CRATE.getNbt()))
                                .apply(SetCountLootFunction.builder(ConstantLootNumberProvider.create(1F)))
                                .weight(7)
                        )
                )
        );

    }

}
